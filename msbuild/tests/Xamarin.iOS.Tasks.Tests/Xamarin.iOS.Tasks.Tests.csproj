<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net461</TargetFramework>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <DisableTransitiveProjectReferences>true</DisableTransitiveProjectReferences>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

  <!--

    The task assembly (Xamarin.iOS.Tasks.dll) is ILMerged, which really
    confuses VSfM when using a project reference to the task assembly project
    file, so instead use a reference to the final Xamarin.iOS.Tasks.dll
    assembly instead. This approach requires us to manually build the task
    assembly before building the test assembly (the BuildTasksAssembly
    target).

  -->

  <ItemGroup>
    <Reference Include="Microsoft.Build" HintPath="$(MSBuildBinPath)\Microsoft.Build.dll" />
    <Reference Include="Microsoft.Build.Framework" HintPath="$(MSBuildBinPath)\Microsoft.Build.Framework.dll" />
    <Reference Include="Microsoft.Build.Tasks.Core" HintPath="$(MSBuildBinPath)\Microsoft.Build.Tasks.Core.dll" />
    <Reference Include="Microsoft.Build.Utilities.Core" HintPath="$(MSBuildBinPath)\Microsoft.Build.Utilities.Core.dll" />
    <Reference Include="Xamarin.iOS.Tasks" HintPath="..\..\Xamarin.iOS.Tasks\bin\$(Configuration)\netstandard2.0\Xamarin.iOS.Tasks.dll" />
    <PackageReference Include="NUnit" Version="3.12.0" />
    <PackageReference Include="NUnit.ConsoleRunner" Version="3.11.1" />
    <PackageReference Include="NUnit.Extension.NUnitV2ResultWriter" Version="3.6.0" />
  </ItemGroup>

  <Target Name="BuildTasksAssembly" AfterTargets="BeforeBuild">
    <MSBuild Projects="..\..\Xamarin.iOS.Tasks\Xamarin.iOS.Tasks.csproj" />
  </Target>

  <ItemGroup>
    <!-- Copy system Microsoft.Build*.dll and dependencies for tests to run against. We can remove this
       and rely entirely on NuGet assets when mono/msbuild is merged into microsoft/msbuild. -->
    <None Include="$(MSBuildToolsPath)\Microsoft.Build*.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="$(MSBuildToolsPath)\System.*.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\..\tests\common\Configuration.cs">
      <Link>Configuration.cs</Link>
    </Compile>
    <Compile Include="..\..\..\tests\common\Profile.cs">
      <Link>Profile.cs</Link>
    </Compile>
    <Compile Include="..\..\..\tests\common\ExecutionHelper.cs">
      <Link>ExecutionHelper.cs</Link>
    </Compile>
    <Compile Include="..\..\..\tools\common\Execution.cs">
      <Link>Execution.cs</Link>
    </Compile>
    <Compile Include="..\..\..\tests\mtouch\Cache.cs">
      <Link>Cache.cs</Link>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <None Include="Resources\Entitlements.plist">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Resources\profile.mobileprovision">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Resources\iTunesArtwork.jpg">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Resources\iTunesArtwork%402x.jpg">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Resources\iTunesArtwork%402x.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Resources\iTunesArtwork.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Resources\iTunesArtwork-invalid-size.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Include="Resources\iTunesArtwork-invalid-size.jpg">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
</Project>
